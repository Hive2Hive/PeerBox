<!-- 
	note: download maven-ant-tasks*.jar from 
	http://maven.apache.org/ant-tasks/download.cgi 
	and place it in the lib folder of ant.
-->

<project name="PeerBox" default="none" basedir="../"
	xmlns:artifact="antlib:org.apache.maven.artifact.ant">
	<description>
        Build tasks for PeerBox
    </description>

	<!-- reference the PeerBox pom to get version information and maven functionality -->
	<artifact:pom id="peerbox_pom" file="peerbox/pom.xml" />

	<!-- set global properties for this build -->
	<property file="build/PeerBox.properties" />
	<property file="build/VisualStudio.properties" />
	<property file="build/WindowsContextMenu.properties" />
	<property file="build/launch4j.properties" />
	<property file="build/InnoSetup.properties" />

	<!-- create proper version property (for installer) -->
	<loadresource property="peerbox.version">
		<propertyresource name="peerbox_pom.version" />
		<filterchain>
			<tokenfilter>
				<filetokenizer />
				<replacestring from="-SNAPSHOT" to="" />
			</tokenfilter>
		</filterchain>
	</loadresource>


	<condition property="isWindows">
		<os family="windows" />
	</condition>
	<condition property="isUnix">
		<os family="unix" />
	</condition>

	<target name="none">
		<echo>Select a task</echo>
        <!-- some tasks -->
        <echo>win_package</echo>
	</target>

	<!-- wrapper targets that depend on platform specific commands (conditional) -->
	<target name="mvn_clean" depends="win_mvn_clean" />
	<target name="mvn_package" depends="win_mvn_package" />

	<target name="win_mvn_clean" if="isWindows">
		<exec executable="cmd" failonerror="true">
			<arg value="/c" />
			<arg value="mvn clean -f ${peerbox.pomfile}" />
		</exec>
	</target>

	<target name="win_mvn_package" if="isWindows">
		<exec executable="cmd" failonerror="true">
			<arg value="/c" />
			<arg value="mvn package -f ${peerbox.pomfile}" />
			<arg value="-DskipTests" />
		</exec>
	</target>

	<target name="win_context_menu_build_x86" if="isWindows">
		<exec executable="${visual_studio.devenv}" failonerror="true">
			<arg value="${context_menu.solution}" />
			<arg value="/Rebuild" />
			<arg value="${context_menu.release.x86}" />
		</exec>
	</target>

	<target name="win_context_menu_build_x64" if="isWindows">
		<exec executable="${visual_studio.devenv}" failonerror="true">
			<arg value="${context_menu.solution}" />
			<arg value="/Rebuild" />
			<arg value="${context_menu.release.x64}" />
		</exec>
	</target>

	<target name="win_jar2exe_launcher" if="isWindows">
		<!-- fill in template placeholders -->
		<copy file="${launch4j.configtemplate}" tofile="${peerbox.winbuild}/${launch4j.configname}" overwrite="true" />

		<replace file="${peerbox.winbuild}/${launch4j.configname}">
			<replacefilter token="@PEERBOX_JAR@" value="${peerbox.jarname}" />
			<replacefilter token="@APP_VERSION@" value="${peerbox.version}" />
            <replacefilter token="@JAVA_VERSION_MIN@" value="${launch4.java_version_min}" />
		</replace>

		<exec executable="${launch4j.exe}" failonerror="true">
			<arg value="${peerbox.winbuild}/${launch4j.configname}" />
		</exec>

	</target>

	<target name="win_installer_build" if="isWindows">
		<!-- fill in template placeholders -->
		<copy file="${inno_setup.setup.configtemplate}" tofile="${inno_setup.setup.config}" overwrite="true" />

		<replace file="${inno_setup.setup.config}">
			<replacefilter token="@BASE_DIR@" value="Windows" />
			<replacefilter token="@PEERBOX_JAR@" value="${peerbox.jarname}" />
			<replacefilter token="@APP_VERSION@" value="${peerbox.version}" />
		</replace>

		<!-- execute the compiler -->
		<exec executable="${inno_setup.compiler}" failonerror="true">
			<arg value="${inno_setup.setup}" />
		</exec>

		<!-- move tmp config to target dir -->
		<move file="${inno_setup.setup.config}" todir="${peerbox.winbuild}" failonerror="true" />
	</target>

	<target name="win_package">
        <!-- create output folders -->
		<antcall target="win_init_target_dir" />

		<!-- build fresh package -->
		<antcall target="mvn_clean" />
		<antcall target="mvn_package" />
        
		<antcall target="copy_peerbox_package">
			<param name="targetdir" value="${peerbox.winbuild}" />
		</antcall>

		<!-- build the context menu extensions -->
		<antcall target="win_context_menu_build_x64" />
        <antcall target="win_copy_contextmenu_x64" />
        
        <antcall target="win_context_menu_build_x86" />
        <antcall target="win_copy_contextmenu_x86" />
        
		<!-- build the exe wrapper for launching the jar -->
		<antcall target="win_jar2exe_launcher" />

		<!-- build the installer -->
		<antcall target="win_copy_installer_resources" />
        
		<antcall target="win_installer_build" />
	</target>

	<target name="win_init_target_dir">
		<!-- delete old and create new build folder -->
		<delete dir="${peerbox.winbuild}" />
		<mkdir dir="${peerbox.winbuild}" />
        <mkdir dir="${peerbox.winbuild}/x86" />
        <mkdir dir="${peerbox.winbuild}/x64" />
		<echo>Create target directory: ${peerbox.winbuild}</echo>
	</target>

	<target name="copy_peerbox_package">
		<echo>Copy PeerBox package to ${targetdir} ...</echo>
		<copy file="${peerbox.jar}" todir="${targetdir}" failonerror="true" />
		<copy todir="${targetdir}/lib" failonerror="true">
			<fileset dir="${peerbox.build}/lib" />
		</copy>
	</target>
    
    <target name="win_copy_contextmenu_x86">
        <echo>Copy Windows Context Menu (x86) extension...</echo>      
        <!-- 32bit -->
        <copy file="${context_menu.home}/Release/ContextMenu.dll" todir="${peerbox.winbuild}/x86" failonerror="true" />
		<copy todir="${peerbox.winbuild}/x86/" failonerror="true">
			<fileset dir="${context_menu.home}/Release" includes="cpprest*.dll" />
		</copy>
        <!-- copy visual c++ redistributable dlls -->
        <copy file="${visual_studio.vc_redist_x86}/msvcp120.dll" todir="${peerbox.winbuild}/x86" failonerror="true" />
        <copy file="${visual_studio.vc_redist_x86}/msvcr120.dll" todir="${peerbox.winbuild}/x86" failonerror="true" />
    </target>
    
    <target name="win_copy_contextmenu_x64">
        <echo>Copy Windows Context Menu (x64) extension...</echo> 
        <!-- 64bit -->
		<copy file="${context_menu.home}/x64/Release/ContextMenu.dll" todir="${peerbox.winbuild}/x64/" failonerror="true" />
		<copy todir="${peerbox.winbuild}/x64/" failonerror="true">
			<fileset dir="${context_menu.home}/x64/Release" includes="cpprest*.dll" />
		</copy>
        <!-- copy visual c++ redistributable dlls -->
        <copy file="${visual_studio.vc_redist_x64}/msvcp120.dll" todir="${peerbox.winbuild}/x64" failonerror="true" />
        <copy file="${visual_studio.vc_redist_x64}/msvcr120.dll" todir="${peerbox.winbuild}/x64" failonerror="true" />
    </target>

	<target name="win_copy_installer_resources">
		<echo>Copy resources ...</echo>
		<copy file="resources/peerbox64.ico" todir="${peerbox.winbuild}" failonerror="true" />
		<copy file="resources/License.rtf" todir="${peerbox.winbuild}" failonerror="true" />
	</target>

</project>